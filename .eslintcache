[{"D:\\_react_projects\\quiz-app\\src\\App.tsx":"1","D:\\_react_projects\\quiz-app\\src\\components\\useFetch.tsx":"2","D:\\_react_projects\\quiz-app\\src\\components\\QA.tsx":"3","D:\\_react_projects\\quiz-app\\src\\components\\Question.tsx":"4","D:\\_react_projects\\quiz-app\\src\\index.tsx":"5"},{"size":187,"mtime":1609842880942,"results":"6","hashOfConfig":"7"},{"size":855,"mtime":1609852126758,"results":"8","hashOfConfig":"7"},{"size":506,"mtime":1609833169148,"results":"9","hashOfConfig":"7"},{"size":3640,"mtime":1609894892734,"results":"10","hashOfConfig":"7"},{"size":219,"mtime":1609800865368,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3n6qti",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\_react_projects\\quiz-app\\src\\App.tsx",[],"D:\\_react_projects\\quiz-app\\src\\components\\useFetch.tsx",["23"],"D:\\_react_projects\\quiz-app\\src\\components\\QA.tsx",["24"],"import React from \"react\";\r\nimport Question from \"./Question\";\r\nimport { useFetch } from \"./useFetch\";\r\n\r\nconst QA = () => {\r\n  const url = \"https://quizapi.io/api/v1/questions\";\r\n\r\n  const { data, loading } = useFetch({ url: url });\r\n\r\n  return (\r\n    <div>\r\n      {!data ? (\r\n        <p>Loading.....</p>\r\n      ) : (\r\n        <div>\r\n          Loaded:\r\n          <div>\r\n            <Question singleData={data[0]} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QA;\r\n","D:\\_react_projects\\quiz-app\\src\\components\\Question.tsx",["25","26","27","28"],"D:\\_react_projects\\quiz-app\\src\\index.tsx",[],{"ruleId":"29","severity":1,"message":"30","line":2,"column":8,"nodeType":"31","messageId":"32","endLine":2,"endColumn":13},{"ruleId":"29","severity":1,"message":"33","line":8,"column":17,"nodeType":"31","messageId":"32","endLine":8,"endColumn":24},{"ruleId":"29","severity":1,"message":"34","line":18,"column":9,"nodeType":"31","messageId":"32","endLine":18,"endColumn":18},{"ruleId":"35","severity":1,"message":"36","line":18,"column":21,"nodeType":"37","endLine":18,"endColumn":22},{"ruleId":"38","severity":1,"message":"39","line":35,"column":43,"nodeType":"40","messageId":"41","endLine":35,"endColumn":45},{"ruleId":"29","severity":1,"message":"42","line":38,"column":11,"nodeType":"31","messageId":"32","endLine":38,"endColumn":18},"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'answerIdx' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'answerIdx' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'counter' is assigned a value but never used."]